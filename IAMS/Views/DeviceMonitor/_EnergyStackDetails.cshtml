@using System.Reflection
@using System.ComponentModel.DataAnnotations;
@model List<IAMS.Models.DeviceInfo.BsuModel003>

<ul class="nav nav-pills m-3" id="pills-tab" role="tablist">
    @for (int i = 0; i < Model.Count; i++) {
        <li class="nav-item" role="presentation">
            <button class="nav-link @(i == 0 ? "active" : "")" id="model-@Model[i].Sn-tab"
                data-bs-toggle="pill" data-bs-target="#model-@Model[i].Sn" type="button" role="tab"
                aria-controls="model-@Model[i].Sn" aria-selected="@(i == 0 ? "true" : "false")">
                @Model[i].Sn.Split('_')[1]
            </button>
        </li>
    }
</ul>
<div class="tab-content" id="pills-tabContent">
    <hr />
    @for (int i = 0; i < Model.Count; i++) {

        var props = typeof(IAMS.Models.DeviceInfo.BsuModel003)
        .GetProperties()
        .Where(p => {
            var displayAttr = p.GetCustomAttribute<DisplayAttribute>();
            return displayAttr == null || displayAttr.GetAutoGenerateField() != false;
        })
        .ToList();


        var pcs = Model[i];
        <div class="tab-pane fade @(i == 0 ? "show active" : "")" id="model-@Model[i].Sn" role="tabpanel"
         aria-labelledby="model-@Model[i].Sn-tab" tabindex="0">
            <div class="row">
                @foreach (var prop in props) {
                    var displayAttr = prop.GetCustomAttribute<DisplayAttribute>();
                    var displayName = displayAttr?.Name ?? prop.Name;

                    <div class="col-2 border-0">
                        <div class="alert alert-light" role="alert">
                            <div class="alert alert-light" role="alert">
                                <strong>@displayName</strong><br>
                                <small class="text-muted">@(prop.GetValue(pcs) ?? "-")</small>
                            </div>
                        </div>
                    </div>

                }
            </div>

        </div>
    }
</div>